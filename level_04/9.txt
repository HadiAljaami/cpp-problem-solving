/*write a program to print year calendar.*/
#include<iostream>usingnamespace std; bool isLeapYear(shortYear)
 { // if year is divisible by 4 AND not divisible by 100// OR if year is divisible by 400// then it is a leap yearreturn (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0); } short DayOfWeekOrder(shortDay, shortMonth, shortYear) { short a, y, m;     a = (14 - Month) / 12;     y = Year - a;     m = Month + (12 * a) - 2; // Gregorian://0:sun, 1:Mon, 2:Tue...etcreturn (Day + y + (y / 4) - (y / 100) + (y / 400) + ((31 * m) / 12)) % 7; } string DayShortName(shortDayOfWeekOrder) { string arrDayNames[] = { "Sun","Mon","Tue","Wed","Thu","Fri","Sat" }; return arrDayNames[DayOfWeekOrder]; } short NumberOfDaysInAMonth(shortMonth, shortYear) { if (Month < 1 || Month>12) return  0; int days[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 }; return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : days[Month - 1]; } 
ProgrammingAdvices.com© Copyright 2022 Problem # 9/4 Solution Using C++ string MonthShortName(shortMonthNumber) { string Months[12] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"    }; return (Months[MonthNumber - 1]); } void PrintMonthCalendar(shortMonth, shortYear) { int NumberOfDays; // Index of the day from 0 to 6int current = DayOfWeekOrder(1, Month, Year);     NumberOfDays = NumberOfDaysInAMonth(Month, Year); // Print the current month name    printf("\n  _______________%s_______________\n\n",         MonthShortName(Month).c_str()); // Print the columns    printf("  Sun  Mon  Tue  Wed  Thu  Fri  Sat\n"); // Print appropriate spacesint i; for (i = 0; i < current; i++)         printf("     "); for (int j = 1; j <= NumberOfDays; j++)     {         printf("%5d", j); if (++i == 7)         {             i = 0;             printf("\n");         }     }    printf("\n  _________________________________\n"); } 
ProgrammingAdvices.com© Copyright 2022